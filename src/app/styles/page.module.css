

.titular{
  display:flex;
  flex-direction: column;
  justify-content: center;
  position: absolute;
  top: 60%;
  transform: translateY(-50%);
  z-index: 3;

}

.titulo{
  padding: 2.5rem;
  font-size: 3.5rem;
  z-index: 3;
  color: white;
  overflow: hidden;
  }

.h5:hover{
  color:#ffffff00;
}
  
.main {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 2.5rem;
  height: 10vh;
  width: 100vw;
  background-color: gradient( 
    to bottom, 
    transparent, 
    rgb(255, 150, 30) );
  color: white;
  font-size: clamp(0.75vw, calc(0.429vw + 0.857vw), 1.2vw);
  position: fixed;
  z-index: 2;

}


.image_title{
  margin: 0;
  padding:0;
  width: 100vw;
  height: auto;
  display: block;
  filter:contrast(0.45);
  filter: drop-shadow(0 0 10.75rem black);
  filter: brightness(0.5); /* Ajusta el valor para controlar el nivel de oscurecimiento */
}

.input{
  width: 14vw;
  height: 7vh;
  background-color: rgba(255, 255, 255, 0.002);
  border-radius: 1cap;
  border: 5px lightblue;
  color: white;
  font-size: 1.1vw;
  padding-left: 1vw;
  background-color: rgb(231, 231, 231, 10%);

}

.input::placeholder{
  color: rgb(255, 255, 255);
  font-weight: 550;
  font-size: 1.1vw;
  padding-left: 0.5vw;
}

.input:hover{
  background-color: rgba(43, 33, 33, 0.433);
  transform:perspective(2rem) scale(1.1);
}

.container{
  width: 100vw;
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  padding: 1rem;
  background-color: rgb(26, 23, 23);
  color: white;
}

.card {
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition: background 200ms, border 200ms;
  max-width: 30vw;
  min-height: 10vh;
  display: flex;
  flex-direction: column;
}

.h2 {
  margin-bottom: 5rem;
}

.image_card{
  max-width: 25vw;
  max-height: 50vh;

}



@media screen and (max-width: 768px) {


  .titulo{
    display:none;
  }
  .main {
    display: flex;
    position: fixed;
    z-index: 2;
    flex-direction: column;
    justify-content: space-around;
    align-items: flex-start;
    padding: 1rem;
    width: 30vw;
    min-height: 100vh;
    color: white;
    background-color: rgba(1, 6, 10, 0.323);
    font-size: clamp(0.55rem, 0.429rem + 0.857vw, 1.2rem);
    word-wrap: break-word;
   } 

   .image_title{
    width: 100%;
    height: 25%;
    display: block;
    filter: brightness(0.2); /* Ajusta el valor para controlar el nivel de oscurecimiento */
   }

   .container{
    width: 100vw;
    height: fit-content;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    padding: 1rem;
    background-color: rgb(26, 23, 23);
    color: white;
  }

   .card {
    border-radius: var(--border-radius);
    border: 1px solid rgba(var(--card-border-rgb), 0);
    transition: background 200ms, border 200ms;
    min-width: 100%;
    min-height: 22vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  
  
  .image_card{
    max-width: 15rem;
    max-height: 15rem;
  
  }
  } 


.description a {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.description p {
  position: relative;
  margin: 0;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: var(--border-radius);
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(25%, auto));
  max-width: 100%;
  width: var(--max-width);
}




.card span {
  display: inline-block;
  transition: transform 200ms;
}



.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
  text-wrap: balance;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  padding: 4rem 0;
}

.center::before {
  background: var(--secondary-glow);
  border-radius: 50%;
  width: 480px;
  height: 360px;
  margin-left: -400px;
}

.center::after {
  background: var(--primary-glow);
  width: 240px;
  height: 180px;
  z-index: -1;
}

.center::before,
.center::after {
  content: "";
  left: 50%;
  position: absolute;
  filter: blur(45px);
  transform: translateZ(0);
}

.logo {
  position: relative;
}
/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }



  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
